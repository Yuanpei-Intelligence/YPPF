# Generated by Django 5.0.11 on 2025-01-23 00:40

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import generic.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("YQpoint", models.IntegerField(default=0, verbose_name="元气值")),
                ("credit", models.IntegerField(default=3, verbose_name="信用分")),
                ("active", models.BooleanField(default=True, verbose_name="激活状态")),
                (
                    "accept_chat",
                    models.BooleanField(default=True, verbose_name="允许提问"),
                ),
                (
                    "accept_anonymous_chat",
                    models.BooleanField(default=True, verbose_name="允许匿名提问"),
                ),
                ("name", models.CharField(max_length=32, verbose_name="名称")),
                (
                    "pinyin",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="拼音"
                    ),
                ),
                (
                    "acronym",
                    models.CharField(
                        blank=True, default="", max_length=32, verbose_name="缩写"
                    ),
                ),
                (
                    "utype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Person", "自然人"),
                            ("Student", "学生"),
                            ("Teacher", "老师"),
                            ("Organization", "组织"),
                            ("Unauthorized", "未授权"),
                            ("", "特殊用户"),
                        ],
                        default="",
                        max_length=20,
                        verbose_name="用户类型",
                    ),
                ),
                (
                    "is_newuser",
                    models.BooleanField(default=True, verbose_name="首次登录"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
            },
            managers=[
                ("objects", generic.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CreditRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_credit", models.IntegerField(verbose_name="原信用分")),
                ("new_credit", models.IntegerField(verbose_name="现信用分")),
                ("delta", models.IntegerField(verbose_name="变化量")),
                ("overflow", models.BooleanField(default=False, verbose_name="溢出")),
                (
                    "source",
                    models.CharField(
                        blank=True, default="", max_length=50, verbose_name="来源"
                    ),
                ),
                ("time", models.DateTimeField(auto_now_add=True, verbose_name="时间")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "信用分记录",
                "verbose_name_plural": "信用分记录",
            },
        ),
        migrations.CreateModel(
            name="PermissionBlacklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.permission",
                        verbose_name="权限",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "权限黑名单",
                "verbose_name_plural": "权限黑名单",
            },
        ),
        migrations.CreateModel(
            name="YQPointRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("delta", models.IntegerField(verbose_name="变化量")),
                (
                    "source",
                    models.CharField(blank=True, max_length=50, verbose_name="来源"),
                ),
                (
                    "source_type",
                    models.SmallIntegerField(
                        choices=[
                            (0, "系统操作"),
                            (1, "每日签到"),
                            (2, "参与活动"),
                            (3, "问题反馈"),
                            (4, "达成成就"),
                            (5, "填写问卷"),
                            (6, "奖池花费"),
                            (7, "奖池补偿"),
                        ],
                        default=0,
                        verbose_name="来源类型",
                    ),
                ),
                ("time", models.DateTimeField(auto_now_add=True, verbose_name="时间")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "元气值记录",
                "verbose_name_plural": "元气值记录",
            },
        ),
    ]
