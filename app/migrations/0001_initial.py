# Generated by Django 4.2.3 on 2023-10-18 18:25

import app.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicQA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.JSONField(blank=True, null=True, verbose_name='关键词')),
                ('directed', models.BooleanField(default=False, verbose_name='是否定向')),
                ('rating', models.IntegerField(default=0, verbose_name='评价')),
            ],
            options={
                'verbose_name': 'P.学术问答',
                'verbose_name_plural': 'P.学术问答',
            },
        ),
        migrations.CreateModel(
            name='AcademicQAAwards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_undirected_qa', models.BooleanField(default=False, verbose_name='是否发起过非定向提问')),
            ],
            options={
                'verbose_name': 'P.学术问答相关奖励',
                'verbose_name_plural': 'P.学术问答相关奖励',
            },
        ),
        migrations.CreateModel(
            name='AcademicTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atype', models.SmallIntegerField(choices=[(0, '主修专业'), (1, '辅修专业'), (2, '双学位专业'), (3, '参与项目')], verbose_name='标签类型')),
                ('tag_content', models.CharField(max_length=63, verbose_name='标签内容')),
            ],
            options={
                'verbose_name': 'P.学术地图标签',
                'verbose_name_plural': 'P.学术地图标签',
            },
        ),
        migrations.CreateModel(
            name='AcademicTagEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, '不公开'), (1, '待审核'), (2, '已公开'), (3, '已弃用')], verbose_name='记录状态')),
            ],
            options={
                'verbose_name': 'P.学术地图标签项目',
                'verbose_name_plural': 'P.学术地图标签项目',
            },
        ),
        migrations.CreateModel(
            name='AcademicTextEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, '不公开'), (1, '待审核'), (2, '已公开'), (3, '已弃用')], verbose_name='记录状态')),
                ('atype', models.SmallIntegerField(choices=[(0, '本科生科研'), (1, '挑战杯'), (2, '实习经历'), (3, '科研方向'), (4, '毕业去向')], verbose_name='类型')),
                ('content', models.CharField(max_length=4095, verbose_name='内容')),
            ],
            options={
                'verbose_name': 'P.学术地图文本项目',
                'verbose_name_plural': 'P.学术地图文本项目',
            },
        ),
        migrations.CreateModel(
            name='ActivityPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, '预告图片'), (1, '总结图片')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='activity/photo/%Y/%m/', verbose_name='活动图片')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
            ],
            options={
                'verbose_name': '3.活动图片',
                'verbose_name_plural': '3.活动图片',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='ActivitySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, '待审核'), (1, '已通过'), (2, '已取消'), (3, '已拒绝')], default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='ActivitySummary/photo/%Y/%m/', verbose_name='活动总结图片')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
            ],
            options={
                'verbose_name': '3.活动总结',
                'verbose_name_plural': '3.活动总结',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, default='', verbose_name='文字内容')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
            ],
            options={
                'verbose_name': '2.评论',
                'verbose_name_plural': '2.评论',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='CommentBase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('typename', models.CharField(default='commentbase', max_length=32, verbose_name='模型类型')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='发起时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='上次修改时间')),
            ],
            options={
                'verbose_name': '2.带有评论',
                'verbose_name_plural': '2.带有评论',
            },
        ),
        migrations.CreateModel(
            name='CommentPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='comment/%Y/%m/', verbose_name='评论图片')),
            ],
            options={
                'verbose_name': '2.评论图片',
                'verbose_name_plural': '2.评论图片',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='课程名称')),
                ('year', models.IntegerField(default=app.models.current_year, verbose_name='开课年份')),
                ('semester', models.CharField(choices=[('Fall', '秋'), ('Spring', '春'), ('Fall+Spring', '春秋')], default=app.models.current_semester, max_length=15, verbose_name='开课学期')),
                ('times', models.SmallIntegerField(default=16, verbose_name='课程开设周数')),
                ('classroom', models.CharField(blank=True, default='', max_length=60, verbose_name='预期上课地点')),
                ('teacher', models.CharField(blank=True, default='', max_length=48, verbose_name='授课教师')),
                ('introduction', models.TextField(blank=True, default='这里暂时没有介绍哦~', verbose_name='课程简介')),
                ('teaching_plan', models.TextField(blank=True, default='暂无', verbose_name='教学计划')),
                ('record_cal_method', models.TextField(blank=True, default='暂无', verbose_name='学时计算方式')),
                ('status', models.SmallIntegerField(choices=[(0, '已撤销'), (1, '未开始'), (2, '预选'), (3, '抽签中'), (4, '补退选'), (5, '选课结束'), (6, '已结束')], default=1, verbose_name='开课状态')),
                ('type', models.SmallIntegerField(choices=[(0, '德'), (1, '智'), (2, '体'), (3, '美'), (4, '劳')], verbose_name='课程类型')),
                ('capacity', models.IntegerField(default=100, verbose_name='课程容量')),
                ('current_participants', models.IntegerField(default=0, verbose_name='当前选课人数')),
                ('publish_day', models.SmallIntegerField(default=3, verbose_name='信息发布时间')),
                ('need_apply', models.BooleanField(default=False, verbose_name='是否需要报名')),
                ('photo', models.ImageField(blank=True, upload_to='course/photo/%Y/', verbose_name='宣传图片')),
                ('QRcode', models.ImageField(blank=True, null=True, upload_to='course/QRcode/%Y/')),
            ],
            options={
                'verbose_name': '4.书院课程',
                'verbose_name_plural': '4.书院课程',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CourseParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, '已选课'), (1, '未选课'), (2, '选课成功'), (3, '选课失败')], default=1, verbose_name='选课状态')),
            ],
            options={
                'verbose_name': '4.课程报名情况',
                'verbose_name_plural': '4.课程报名情况',
            },
        ),
        migrations.CreateModel(
            name='CourseRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_name', models.CharField(blank=True, max_length=60, verbose_name='课程名称额外标注')),
                ('year', models.IntegerField(default=app.models.current_year, verbose_name='课程所在学年')),
                ('semester', models.CharField(choices=[('Fall', '秋'), ('Spring', '春'), ('Fall+Spring', '春秋')], default=app.models.current_semester, max_length=15, verbose_name='课程所在学期')),
                ('total_hours', models.FloatField(verbose_name='总计参加学时')),
                ('attend_times', models.IntegerField(default=0, verbose_name='参加课程次数')),
                ('invalid', models.BooleanField(default=False, verbose_name='无效')),
            ],
            options={
                'verbose_name': '4.学时表',
                'verbose_name_plural': '4.学时表',
            },
        ),
        migrations.CreateModel(
            name='CourseTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='开始时间')),
                ('end', models.DateTimeField(verbose_name='结束时间')),
                ('cur_week', models.IntegerField(default=0, verbose_name='已生成周数')),
                ('end_week', models.IntegerField(default=16, verbose_name='总周数')),
            ],
            options={
                'verbose_name': '4.上课时间',
                'verbose_name_plural': '4.上课时间',
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Freshman',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.CharField(max_length=20, unique=True, verbose_name='学号')),
                ('name', models.CharField(max_length=10, verbose_name='姓名')),
                ('gender', models.CharField(max_length=5, verbose_name='性别')),
                ('birthday', models.DateField(verbose_name='生日')),
                ('place', models.CharField(blank=True, default='其它', max_length=32, verbose_name='生源地')),
                ('grade', models.CharField(blank=True, max_length=5, null=True, verbose_name='年级')),
                ('status', models.SmallIntegerField(choices=[(0, '未注册'), (1, '已注册')], default=0, verbose_name='注册状态')),
            ],
            options={
                'verbose_name': '0.新生信息',
                'verbose_name_plural': '0.新生信息',
            },
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='帮助标题')),
                ('content', models.TextField(max_length=500, verbose_name='帮助内容')),
            ],
            options={
                'verbose_name': '~A.页面帮助',
                'verbose_name_plural': '~A.页面帮助',
            },
        ),
        migrations.CreateModel(
            name='ModifyRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usertype', models.CharField(blank=True, default='', max_length=16, verbose_name='用户类型')),
                ('name', models.CharField(blank=True, default='', max_length=32, verbose_name='名称')),
                ('info', models.TextField(blank=True, default='', verbose_name='相关信息')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '~R.修改记录',
                'verbose_name_plural': '~R.修改记录',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='NaturalPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_id_dbonly', models.CharField(blank=True, max_length=150, verbose_name='学号——仅数据库')),
                ('name', models.CharField(max_length=10, verbose_name='姓名')),
                ('nickname', models.CharField(blank=True, max_length=20, null=True, verbose_name='昵称')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(0, '男'), (1, '女')], null=True, verbose_name='性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='电话')),
                ('biography', models.TextField(default='还没有填写哦～', max_length=1024, verbose_name='自我介绍')),
                ('avatar', models.ImageField(blank=True, upload_to='avatar/')),
                ('wallpaper', models.ImageField(blank=True, upload_to='wallpaper/')),
                ('inform_share', models.BooleanField(default=True)),
                ('last_time_login', models.DateTimeField(blank=True, null=True, verbose_name='上次登录时间')),
                ('QRcode', models.ImageField(blank=True, upload_to='QRcode/')),
                ('visit_times', models.IntegerField(default=0, verbose_name='浏览次数')),
                ('identity', models.SmallIntegerField(choices=[(0, '教职工'), (1, '学生')], default=1, verbose_name='身份')),
                ('stu_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='班级')),
                ('stu_major', models.CharField(blank=True, max_length=25, null=True, verbose_name='专业')),
                ('stu_grade', models.CharField(blank=True, max_length=5, null=True, verbose_name='年级')),
                ('stu_dorm', models.CharField(blank=True, max_length=6, null=True, verbose_name='宿舍')),
                ('status', models.SmallIntegerField(choices=[(0, '未毕业'), (1, '已毕业')], default=0, verbose_name='在校状态')),
                ('show_nickname', models.BooleanField(default=False)),
                ('show_birthday', models.BooleanField(default=False)),
                ('show_gender', models.BooleanField(default=True)),
                ('show_email', models.BooleanField(default=False)),
                ('show_tel', models.BooleanField(default=False)),
                ('show_major', models.BooleanField(default=True)),
                ('show_dorm', models.BooleanField(default=False)),
                ('wechat_receive_level', models.IntegerField(choices=[(0, '接收全部消息'), (500, '仅重要通知')], default=0, help_text='允许微信接收的最低消息等级，更低等级的通知类消息将被屏蔽', verbose_name='微信接收等级')),
                ('accept_promote', models.BooleanField(default=True)),
                ('active_score', models.FloatField(default=0, verbose_name='活跃度')),
            ],
            options={
                'verbose_name': '0.自然人',
                'verbose_name_plural': '0.自然人',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, '已处理'), (1, '待处理'), (2, '已删除')], default=1)),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='通知标题')),
                ('content', models.TextField(blank=True, verbose_name='通知内容')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='通知发出时间')),
                ('finish_time', models.DateTimeField(blank=True, null=True, verbose_name='通知处理时间')),
                ('typename', models.SmallIntegerField(choices=[(0, '知晓类'), (1, '处理类')], default=0)),
                ('URL', models.URLField(blank=True, max_length=1024, null=True, verbose_name='相关网址')),
                ('bulk_identifier', models.CharField(db_index=True, default='', max_length=64, verbose_name='批量信息标识')),
                ('anonymous_flag', models.BooleanField(default=False, verbose_name='是否匿名')),
            ],
            options={
                'verbose_name': 'o.通知消息',
                'verbose_name_plural': 'o.通知消息',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oname', models.CharField(max_length=32, unique=True)),
                ('status', models.BooleanField(default=True, verbose_name='激活状态')),
                ('introduction', models.TextField(blank=True, default='这里暂时没有介绍哦~', null=True, verbose_name='介绍')),
                ('avatar', models.ImageField(blank=True, upload_to='avatar/')),
                ('QRcode', models.ImageField(blank=True, upload_to='QRcode/')),
                ('wallpaper', models.ImageField(blank=True, upload_to='wallpaper/')),
                ('visit_times', models.IntegerField(default=0, verbose_name='浏览次数')),
                ('inform_share', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': '0.小组',
                'verbose_name_plural': '0.小组',
            },
        ),
        migrations.CreateModel(
            name='OrganizationTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='标签名')),
                ('color', models.CharField(choices=[('#C1C1C1', '灰色'), ('#DC143C', '红色'), ('#FFA500', '橙色'), ('#FFD700', '黄色'), ('#3CB371', '绿色'), ('#1E90FF', '蓝色'), ('#800080', '紫色'), ('#FF69B4', '粉色'), ('#DAA520', '棕色'), ('#8B4513', '咖啡色')], max_length=10, verbose_name='颜色')),
            ],
            options={
                'verbose_name': '1.组织类型标签',
                'verbose_name_plural': '1.组织类型标签',
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('otype_id', models.SmallIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='小组类型编号')),
                ('otype_name', models.CharField(max_length=25, verbose_name='小组类型名称')),
                ('otype_superior_id', models.SmallIntegerField(default=0, verbose_name='上级小组类型编号')),
                ('job_name_list', django_mysql.models.ListCharField(models.CharField(max_length=10), max_length=44, size=4)),
                ('allow_unsubscribe', models.BooleanField(default=True, verbose_name='允许取关?')),
                ('control_pos_threshold', models.SmallIntegerField(default=0, verbose_name='管理者权限等级上限')),
            ],
            options={
                'verbose_name': '1.小组类型',
                'verbose_name_plural': '1.小组类型',
                'ordering': ['otype_name'],
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('申请中', 'Applying'), ('活动申请失败', 'Applyfailed'), ('已报名', 'Applysuccess'), ('已参与', 'Attended'), ('未签到', 'Unattended'), ('放弃', 'Canceled')], default='申请中', max_length=32, verbose_name='学生参与活动状态')),
            ],
            options={
                'verbose_name': '3.活动参与情况',
                'verbose_name_plural': '3.活动参与情况',
                'ordering': ['activity_id'],
            },
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='名称')),
                ('type', models.CharField(choices=[('兑换', '兑换奖池'), ('抽奖', '抽奖奖池'), ('盲盒', '盲盒奖池')], max_length=15, verbose_name='类型')),
                ('entry_time', models.IntegerField(default=1, verbose_name='进入次数')),
                ('ticket_price', models.IntegerField(default=0, verbose_name='抽奖费')),
                ('start', models.DateTimeField(verbose_name='开始时间')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('redeem_start', models.DateTimeField(blank=True, null=True, verbose_name='兑奖开始时间')),
                ('redeem_end', models.DateTimeField(blank=True, null=True, verbose_name='兑奖结束时间')),
            ],
            options={
                'verbose_name': '5.奖池',
                'verbose_name_plural': '5.奖池',
            },
        ),
        migrations.CreateModel(
            name='PoolItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_num', models.IntegerField(verbose_name='初始数量')),
                ('consumed_num', models.IntegerField(default=0, verbose_name='已兑换')),
                ('exchange_limit', models.IntegerField(default=0, verbose_name='单人兑换上限')),
                ('exchange_price', models.IntegerField(blank=True, null=True, verbose_name='价格')),
                ('is_big_prize', models.BooleanField(default=False, verbose_name='是否特别奖品')),
            ],
            options={
                'verbose_name': '5.奖池奖品',
                'verbose_name_plural': '5.奖池奖品',
            },
        ),
        migrations.CreateModel(
            name='PoolRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('抽奖中', '抽奖中'), ('未中奖', '未中奖'), ('未兑奖', '未兑奖'), ('已兑奖', '已兑奖'), ('已失效', '已失效')], max_length=15, verbose_name='状态')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('redeem_time', models.DateTimeField(blank=True, null=True, verbose_name='兑奖时间')),
            ],
            options={
                'verbose_name': '5.奖池记录',
                'verbose_name_plural': '5.奖池记录',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.SmallIntegerField(default=10, verbose_name='职务等级')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否是负责人')),
                ('show_post', models.BooleanField(default=True)),
                ('year', models.IntegerField(default=app.models.current_year, verbose_name='当前学年')),
                ('semester', models.CharField(choices=[('Fall', '秋'), ('Spring', '春'), ('Fall+Spring', '春秋')], default='Fall+Spring', max_length=15, verbose_name='当前学期')),
                ('status', models.CharField(choices=[('在职', 'Inservice'), ('离职', 'Depart')], default='在职', max_length=32, verbose_name='职务状态')),
            ],
            options={
                'verbose_name': '1.职务',
                'verbose_name_plural': '1.职务',
            },
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('more_info', models.CharField(blank=True, default='', max_length=255, verbose_name='详情')),
                ('stock', models.IntegerField(default=0, verbose_name='参考库存')),
                ('reference_price', models.IntegerField(verbose_name='参考价格')),
                ('image', models.ImageField(blank=True, null=True, upload_to='prize/%Y-%m/', verbose_name='图片')),
            ],
            options={
                'verbose_name': '5.奖品',
                'verbose_name_plural': '5.奖品',
            },
        ),
        migrations.CreateModel(
            name='Wishes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, default='', verbose_name='心愿内容')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('background', models.TextField(default=app.models.Wishes.rand_color, verbose_name='颜色编码')),
            ],
            options={
                'verbose_name': '~A.心愿',
                'verbose_name_plural': '~A.心愿',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('commentbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.commentbase')),
                ('title', models.CharField(max_length=50, verbose_name='活动名称')),
                ('year', models.IntegerField(default=app.models.current_year, verbose_name='活动年份')),
                ('semester', models.CharField(choices=[('Fall', '秋'), ('Spring', '春'), ('Fall+Spring', '春秋')], default=app.models.current_semester, max_length=15, verbose_name='活动学期')),
                ('publish_day', models.SmallIntegerField(default=3, verbose_name='信息发布提前时间')),
                ('publish_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='信息发布时间')),
                ('need_apply', models.BooleanField(default=False, verbose_name='是否需要报名')),
                ('endbefore', models.SmallIntegerField(choices=[(0, '一小时'), (1, '一天'), (2, '三天'), (3, '一周')], default=1, verbose_name='报名截止于')),
                ('apply_end', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='报名截止时间')),
                ('start', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='活动开始时间')),
                ('end', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='活动结束时间')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='活动地点')),
                ('introduction', models.TextField(blank=True, max_length=225, verbose_name='活动简介')),
                ('QRcode', models.ImageField(blank=True, upload_to='QRcode/')),
                ('bidding', models.BooleanField(default=False, verbose_name='是否投点竞价')),
                ('need_checkin', models.BooleanField(default=False, verbose_name='是否需要签到')),
                ('visit_times', models.IntegerField(default=0, verbose_name='浏览次数')),
                ('recorded', models.BooleanField(default=False, verbose_name='是否预报备')),
                ('valid', models.BooleanField(default=False, verbose_name='是否已审核')),
                ('inner', models.BooleanField(default=False, verbose_name='内部活动')),
                ('capacity', models.IntegerField(default=100, verbose_name='活动最大参与人数')),
                ('current_participants', models.IntegerField(default=0, verbose_name='活动当前报名人数')),
                ('URL', models.URLField(blank=True, default='', max_length=1024, verbose_name='活动相关(推送)网址')),
                ('status', models.CharField(choices=[('审核中', 'Reviewing'), ('已撤销', 'Abort'), ('未过审', 'Reject'), ('已取消', 'Canceled'), ('报名中', 'Applying'), ('待发布', 'Unpublished'), ('等待中', 'Waiting'), ('进行中', 'Progressing'), ('已结束', 'End')], default='审核中', max_length=32, verbose_name='活动状态')),
                ('category', models.SmallIntegerField(choices=[(0, '普通活动'), (1, '课程活动')], default=0, verbose_name='活动类别')),
            ],
            options={
                'verbose_name': '3.活动',
                'verbose_name_plural': '3.活动',
            },
            bases=('app.commentbase',),
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('commentbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.commentbase')),
                ('title', models.CharField(default='', max_length=50, verbose_name='主题')),
                ('questioner_anonymous', models.BooleanField(default=True, verbose_name='提问方是否匿名')),
                ('respondent_anonymous', models.BooleanField(default=False, verbose_name='回答方是否匿名')),
                ('status', models.SmallIntegerField(choices=[(0, '进行中'), (1, '已关闭')], default=0)),
            ],
            options={
                'verbose_name': '2.对话',
                'verbose_name_plural': '2.对话',
            },
            bases=('app.commentbase',),
        ),
        migrations.CreateModel(
            name='ModifyOrganization',
            fields=[
                ('commentbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.commentbase')),
                ('oname', models.CharField(max_length=32)),
                ('introduction', models.TextField(blank=True, default='这里暂时没有介绍哦~', null=True, verbose_name='介绍')),
                ('application', models.TextField(blank=True, default='这里暂时还没写申请理由哦~', null=True, verbose_name='申请理由')),
                ('avatar', models.ImageField(blank=True, default='avatar/org_default.png', null=True, upload_to='avatar/', verbose_name='小组头像')),
                ('status', models.SmallIntegerField(choices=[(0, '审核中'), (1, '已通过'), (2, '已取消'), (3, '已拒绝')], default=0)),
                ('tags', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'verbose_name': '1.新建小组',
                'verbose_name_plural': '1.新建小组',
                'ordering': ['-modify_time', '-time'],
            },
            bases=('app.commentbase',),
        ),
        migrations.CreateModel(
            name='ModifyPosition',
            fields=[
                ('commentbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.commentbase')),
                ('pos', models.SmallIntegerField(blank=True, null=True, verbose_name='申请职务等级')),
                ('reason', models.TextField(blank=True, default='这里暂时还没写申请理由哦~', null=True, verbose_name='申请理由')),
                ('status', models.SmallIntegerField(choices=[(0, '审核中'), (1, '已通过'), (2, '已取消'), (3, '已拒绝')], default=0)),
                ('apply_type', models.CharField(choices=[('加入小组', 'Join'), ('修改职位', 'Transfer'), ('退出小组', 'Withdraw')], max_length=32, verbose_name='申请类型')),
            ],
            options={
                'verbose_name': '1.成员申请详情',
                'verbose_name_plural': '1.成员申请详情',
                'ordering': ['-modify_time', '-time'],
            },
            bases=('app.commentbase',),
        ),
    ]
