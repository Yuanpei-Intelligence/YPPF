# Generated by Django 5.0.11 on 2025-01-23 00:40

import app.models
import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("app", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="academicqaawards",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="academictagentry",
            name="tag",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.academictag"
            ),
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "commentbase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.commentbase",
                    ),
                ),
                ("title", models.CharField(max_length=50, verbose_name="活动名称")),
                (
                    "year",
                    models.IntegerField(
                        default=app.models.current_year, verbose_name="活动年份"
                    ),
                ),
                (
                    "semester",
                    models.CharField(
                        choices=[
                            ("Fall", "秋"),
                            ("Spring", "春"),
                            ("Fall+Spring", "春秋"),
                        ],
                        default=app.models.current_semester,
                        max_length=15,
                        verbose_name="活动学期",
                    ),
                ),
                (
                    "publish_day",
                    models.SmallIntegerField(
                        default=3, verbose_name="信息发布提前时间"
                    ),
                ),
                (
                    "publish_time",
                    models.DateTimeField(
                        default=datetime.datetime.now, verbose_name="信息发布时间"
                    ),
                ),
                (
                    "need_apply",
                    models.BooleanField(default=False, verbose_name="是否需要报名"),
                ),
                (
                    "endbefore",
                    models.SmallIntegerField(
                        choices=[(0, "一小时"), (1, "一天"), (2, "三天"), (3, "一周")],
                        default=1,
                        verbose_name="报名截止于",
                    ),
                ),
                (
                    "apply_end",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime.now,
                        verbose_name="报名截止时间",
                    ),
                ),
                (
                    "start",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime.now,
                        verbose_name="活动开始时间",
                    ),
                ),
                (
                    "end",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime.now,
                        verbose_name="活动结束时间",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="活动地点"
                    ),
                ),
                (
                    "introduction",
                    models.TextField(
                        blank=True, max_length=225, verbose_name="活动简介"
                    ),
                ),
                ("QRcode", models.ImageField(blank=True, upload_to="QRcode/")),
                (
                    "bidding",
                    models.BooleanField(default=False, verbose_name="是否投点竞价"),
                ),
                (
                    "need_checkin",
                    models.BooleanField(default=False, verbose_name="是否需要签到"),
                ),
                (
                    "visit_times",
                    models.IntegerField(default=0, verbose_name="浏览次数"),
                ),
                (
                    "recorded",
                    models.BooleanField(default=False, verbose_name="是否预报备"),
                ),
                (
                    "valid",
                    models.BooleanField(default=False, verbose_name="是否已审核"),
                ),
                ("inner", models.BooleanField(default=False, verbose_name="内部活动")),
                (
                    "capacity",
                    models.IntegerField(default=100, verbose_name="活动最大参与人数"),
                ),
                (
                    "current_participants",
                    models.IntegerField(default=0, verbose_name="活动当前报名人数"),
                ),
                (
                    "URL",
                    models.URLField(
                        blank=True,
                        default="",
                        max_length=1024,
                        verbose_name="活动相关(推送)网址",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("审核中", "Reviewing"),
                            ("已撤销", "Abort"),
                            ("未过审", "Reject"),
                            ("已取消", "Canceled"),
                            ("报名中", "Applying"),
                            ("待发布", "Unpublished"),
                            ("等待中", "Waiting"),
                            ("进行中", "Progressing"),
                            ("已结束", "End"),
                        ],
                        default="审核中",
                        max_length=32,
                        verbose_name="活动状态",
                    ),
                ),
                (
                    "category",
                    models.SmallIntegerField(
                        choices=[(0, "普通活动"), (1, "课程活动")],
                        default=0,
                        verbose_name="活动类别",
                    ),
                ),
            ],
            options={
                "verbose_name": "3.活动",
                "verbose_name_plural": "3.活动",
            },
            bases=("app.commentbase",),
        ),
        migrations.AddField(
            model_name="comment",
            name="commentator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="评论者",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="commentbase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="app.commentbase",
            ),
        ),
        migrations.AddField(
            model_name="commentphoto",
            name="comment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comment_photos",
                to="app.comment",
            ),
        ),
        migrations.AddField(
            model_name="courseparticipant",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="participant_set",
                to="app.course",
            ),
        ),
        migrations.AddField(
            model_name="courserecord",
            name="course",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="app.course",
            ),
        ),
        migrations.AddField(
            model_name="coursetime",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="time_set",
                to="app.course",
            ),
        ),
        migrations.AddField(
            model_name="modifyrecord",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="modify_records",
                to=settings.AUTH_USER_MODEL,
                to_field="username",
            ),
        ),
        migrations.AddField(
            model_name="naturalperson",
            name="person_id",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="courserecord",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.naturalperson"
            ),
        ),
        migrations.AddField(
            model_name="courseparticipant",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.naturalperson"
            ),
        ),
        migrations.AddField(
            model_name="academictextentry",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.naturalperson"
            ),
        ),
        migrations.AddField(
            model_name="academictagentry",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.naturalperson"
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="receiver",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recv_notice",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="relate_instance",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="relate_notifications",
                to="app.commentbase",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="sender",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="send_notice",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="organization_id",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="naturalperson",
            name="unsubscribe_list",
            field=models.ManyToManyField(
                db_index=True, related_name="unsubscribers", to="app.organization"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="app.organization",
                verbose_name="开课组织",
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="tags",
            field=models.ManyToManyField(to="app.organizationtag"),
        ),
        migrations.AddField(
            model_name="organizationtype",
            name="incharge",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="incharge",
                to="app.naturalperson",
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="otype",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.organizationtype"
            ),
        ),
        migrations.AddField(
            model_name="participation",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="app.naturalperson",
            ),
        ),
        migrations.AddField(
            model_name="poolitem",
            name="pool",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="app.pool",
                verbose_name="奖池",
            ),
        ),
        migrations.AddField(
            model_name="poolrecord",
            name="pool",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="app.pool",
                verbose_name="奖池",
            ),
        ),
        migrations.AddField(
            model_name="poolrecord",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="position",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="position_set",
                to="app.organization",
            ),
        ),
        migrations.AddField(
            model_name="position",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="position_set",
                to="app.naturalperson",
            ),
        ),
        migrations.AddField(
            model_name="prize",
            name="provider",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="提供者",
            ),
        ),
        migrations.AddField(
            model_name="poolrecord",
            name="prize",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.prize",
                verbose_name="奖品",
            ),
        ),
        migrations.AddField(
            model_name="poolitem",
            name="prize",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.prize",
                verbose_name="奖品",
            ),
        ),
        migrations.AddField(
            model_name="pool",
            name="activity",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="app.activity",
            ),
        ),
        migrations.AddField(
            model_name="participation",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="app.activity",
            ),
        ),
        migrations.AddField(
            model_name="activitysummary",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.activity"
            ),
        ),
        migrations.AddField(
            model_name="activityphoto",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="photos",
                to="app.activity",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="course_time",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="app.coursetime",
                verbose_name="课程每周活动时间",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="examine_teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="app.naturalperson",
                verbose_name="审核老师",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="organization_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.organization"
            ),
        ),
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "commentbase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.commentbase",
                    ),
                ),
                (
                    "title",
                    models.CharField(default="", max_length=50, verbose_name="主题"),
                ),
                (
                    "questioner_anonymous",
                    models.BooleanField(default=True, verbose_name="提问方是否匿名"),
                ),
                (
                    "respondent_anonymous",
                    models.BooleanField(default=False, verbose_name="回答方是否匿名"),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "进行中"), (1, "已关闭")], default=0
                    ),
                ),
                (
                    "questioner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="send_chat_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "respondent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="receive_chat_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "2.对话",
                "verbose_name_plural": "2.对话",
            },
            bases=("app.commentbase",),
        ),
        migrations.AddField(
            model_name="academicqa",
            name="chat",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="app.chat"
            ),
        ),
        migrations.CreateModel(
            name="ModifyOrganization",
            fields=[
                (
                    "commentbase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.commentbase",
                    ),
                ),
                ("oname", models.CharField(max_length=32)),
                (
                    "introduction",
                    models.TextField(
                        blank=True,
                        default="这里暂时没有介绍哦~",
                        null=True,
                        verbose_name="介绍",
                    ),
                ),
                (
                    "application",
                    models.TextField(
                        blank=True,
                        default="这里暂时还没写申请理由哦~",
                        null=True,
                        verbose_name="申请理由",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        default="avatar/org_default.png",
                        null=True,
                        upload_to="avatar/",
                        verbose_name="小组头像",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "审核中"),
                            (1, "已通过"),
                            (2, "已取消"),
                            (3, "已拒绝"),
                        ],
                        default=0,
                    ),
                ),
                ("tags", models.CharField(blank=True, default="", max_length=100)),
                (
                    "otype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.organizationtype",
                    ),
                ),
                (
                    "pos",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "1.新建小组",
                "verbose_name_plural": "1.新建小组",
                "ordering": ["-modify_time", "-time"],
            },
            bases=("app.commentbase",),
        ),
        migrations.CreateModel(
            name="ModifyPosition",
            fields=[
                (
                    "commentbase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.commentbase",
                    ),
                ),
                (
                    "pos",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="申请职务等级"
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True,
                        default="这里暂时还没写申请理由哦~",
                        null=True,
                        verbose_name="申请理由",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "审核中"),
                            (1, "已通过"),
                            (2, "已取消"),
                            (3, "已拒绝"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "apply_type",
                    models.CharField(
                        choices=[
                            ("加入小组", "Join"),
                            ("修改职位", "Transfer"),
                            ("退出小组", "Withdraw"),
                        ],
                        max_length=32,
                        verbose_name="申请类型",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="position_application",
                        to="app.organization",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="position_application",
                        to="app.naturalperson",
                    ),
                ),
            ],
            options={
                "verbose_name": "1.成员申请详情",
                "verbose_name_plural": "1.成员申请详情",
                "ordering": ["-modify_time", "-time"],
            },
            bases=("app.commentbase",),
        ),
        migrations.AddConstraint(
            model_name="courseparticipant",
            constraint=models.UniqueConstraint(
                fields=("course", "person"), name="Unique course selection record"
            ),
        ),
    ]
